<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@2.32">
  <actions>
    <hudson.model.ParametersAction>
      <safeParameters class="sorted-set"/>
      <parameters>
        <hudson.model.StringParameterValue>
          <name>Tenant_Name</name>
          <description></description>
          <value>bha</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>Number_of_Micro_services</name>
          <description></description>
          <value>5</value>
        </hudson.model.StringParameterValue>
        <hudson.model.StringParameterValue>
          <name>Replicas</name>
          <description></description>
          <value>3</value>
        </hudson.model.StringParameterValue>
      </parameters>
      <parameterDefinitionNames>
        <string>Tenant_Name</string>
        <string>Number_of_Micro_services</string>
        <string>Replicas</string>
      </parameterDefinitionNames>
    </hudson.model.ParametersAction>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>admin</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="workflow-cps-global-lib@2.13">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@1.3.8">
      <stagesUUID>8731054d-1eb4-4623-bd21-b1d3a5e661b1</stagesUUID>
      <stagesList>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStages plugin="pipeline-model-api@1.3.8">
          <stages>
            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <name>Tenant Creation</name>
              <branches>
                <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                  <name>default</name>
                  <steps>
                    <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                      <name>sh</name>
                      <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                        <arguments class="linked-hash-map">
                          <entry>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <key>script</key>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                            <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                              <value class="string">
          kubectl create namespace ${Tenant_Name}
            #!/bin/sh

a=Number_of_Micro_services
b=Replicas
c=2
d=$((a  b  c))
echo no of microservices are $d
if [ $d -ge 1 ] &amp;&amp; [ $d -le 30 ] ;
then
kubectl apply -f ns-resource-quota/ns-resource-quota_0-5.yaml --namespace=${Tenant_Name}
elif [ $d -ge 31 ] &amp;&amp; [ $d -le 60 ] ;
then
kubectl apply -f ns-resource-quota/ns-resource-quota_5-10.yaml --namespace=${Tenant_Name}
elif [ $d -ge 61 ] &amp;&amp; [ $d -le 100 ] ;
then
kubectl apply -f ns-resource-quota/ ns-resource-quota_10-15.yaml --namespace=${Tenant_Name}
else
echo the selected values are not in range
fi

            kubectl describe ns ${Tenant_Name}
            </value>
                            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                          </entry>
                        </arguments>
                      </args>
                    </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStep>
                  </steps>
                </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
              </branches>
              <parallelContent/>
            </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
          </stages>
          <uuid>8731054d-1eb4-4623-bd21-b1d3a5e661b1</uuid>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStages>
      </stagesList>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <hudson.plugins.git.util.BuildData plugin="git@3.10.0">
      <buildsByBranchName>
        <entry>
          <string>refs/remotes/origin/dev</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@2.7.7">
              <sha1>ecd43ab5efeb59384c31bd4b327a88d3532bd0fd</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/dev</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision reference="../marked"/>
            <hudsonBuildNumber>14</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
        <entry>
          <string>refs/remotes/origin/master</string>
          <hudson.plugins.git.util.Build>
            <marked plugin="git-client@2.7.7">
              <sha1>3a1ea154c65e9597941a6722d1d237bc13add576</sha1>
              <branches class="list">
                <hudson.plugins.git.Branch>
                  <sha1 reference="../../../sha1"/>
                  <name>refs/remotes/origin/master</name>
                </hudson.plugins.git.Branch>
              </branches>
            </marked>
            <revision plugin="git-client@2.7.7">
              <sha1 reference="../../marked/sha1"/>
              <branches class="list">
                <hudson.plugins.git.Branch reference="../../../marked/branches/hudson.plugins.git.Branch"/>
              </branches>
            </revision>
            <hudsonBuildNumber>13</hudsonBuildNumber>
          </hudson.plugins.git.util.Build>
        </entry>
      </buildsByBranchName>
      <lastBuild reference="../buildsByBranchName/entry/hudson.plugins.git.util.Build"/>
      <remoteUrls>
        <string>https://github.com/chbharathkumar/kubernetes-jenkins.git</string>
      </remoteUrls>
    </hudson.plugins.git.util.BuildData>
    <hudson.plugins.git.GitTagAction plugin="git@3.10.0">
      <tags class="hudson.util.CopyOnWriteMap$Tree">
        <entry>
          <string>refs/remotes/origin/dev</string>
          <list/>
        </entry>
      </tags>
      <ws>/home/ubuntu/.jenkins/workspace/Tenant_Creation</ws>
    </hudson.plugins.git.GitTagAction>
    <org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState plugin="workflow-scm-step@2.7">
      <revisionStates>
        <entry>
          <string>git https://github.com/chbharathkumar/kubernetes-jenkins.git</string>
          <hudson.scm.SCMRevisionState_-None/>
        </entry>
      </revisionStates>
    </org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState>
  </actions>
  <queueId>67</queueId>
  <timestamp>1557490813997</timestamp>
  <startTime>1557490814000</startTime>
  <result>FAILURE</result>
  <duration>3760</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>FAILURE</result>
    <script>pipeline {
    agent any
    stages {
      stage(&apos;Tenant Creation&apos;) {
        steps{
          sh &apos;&apos;&apos;
          kubectl create namespace ${Tenant_Name}
            #!/bin/sh

a=Number_of_Micro_services
b=Replicas
c=2
d=$((a  b  c))
echo no of microservices are $d
if [ $d -ge 1 ] &amp;&amp; [ $d -le 30 ] ;
then
kubectl apply -f ns-resource-quota/ns-resource-quota_0-5.yaml --namespace=${Tenant_Name}
elif [ $d -ge 31 ] &amp;&amp; [ $d -le 60 ] ;
then
kubectl apply -f ns-resource-quota/ns-resource-quota_5-10.yaml --namespace=${Tenant_Name}
elif [ $d -ge 61 ] &amp;&amp; [ $d -le 100 ] ;
then
kubectl apply -f ns-resource-quota/ ns-resource-quota_10-15.yaml --namespace=${Tenant_Name}
else
echo the selected values are not in range
fi

            kubectl describe ns ${Tenant_Name}
            &apos;&apos;&apos;
        }
      }

    }    
}
</script>
    <loadedScripts class="map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>331035932</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>854553063</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1402462246</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>378034878</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>76473738</long>
      </entry>
    </timings>
    <sandbox>true</sandbox>
    <iota>21</iota>
    <head>1:21</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList">
    <org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
      <scm class="hudson.plugins.git.GitSCM" plugin="git@3.10.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <url>https://github.com/chbharathkumar/kubernetes-jenkins.git</url>
            <credentialsId>ef9e4802-7979-4c64-9c9b-d6c351f732ce</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/dev</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions/>
      </scm>
      <node></node>
      <workspace>/home/ubuntu/.jenkins/workspace/Tenant_Creation</workspace>
      <changelogFile>/home/ubuntu/.jenkins/jobs/Tenant_Creation/builds/14/changelog0.xml</changelogFile>
      <pollingBaseline class="hudson.scm.SCMRevisionState$None" reference="../../../actions/org.jenkinsci.plugins.workflow.steps.scm.MultiSCMRevisionState/revisionStates/entry/hudson.scm.SCMRevisionState_-None"/>
    </org.jenkinsci.plugins.workflow.job.WorkflowRun_-SCMCheckout>
  </checkouts>
</flow-build>