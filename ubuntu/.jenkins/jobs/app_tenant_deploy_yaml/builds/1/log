Started by user [8mha:////4K5wFlcXmJC0DsPJ4mF2W0rBte8CK1/5fcgVP9EWRDhLAAAAlx+LCAAAAAAAAP9b85aBtbiIQTGjNKU4P08vOT+vOD8nVc83PyU1x6OyILUoJzMv2y+/JJUBAhiZGBgqihhk0NSjKDWzXb3RdlLBUSYGJk8GtpzUvPSSDB8G5tKinBIGIZ+sxLJE/ZzEvHT94JKizLx0a6BxUmjGOUNodHsLgAzWEgZu/dLi1CL9xJTczDwAj6GcLcAAAAA=[0madmin
Building in workspace /home/ubuntu/.jenkins/workspace/app_tenant_deploy_yaml
using credential ef9e4802-7979-4c64-9c9b-d6c351f732ce
Cloning the remote Git repository
Cloning repository https://github.com/chbharathkumar/kubernetes-jenkins.git
 > git init /home/ubuntu/.jenkins/workspace/app_tenant_deploy_yaml # timeout=10
Fetching upstream changes from https://github.com/chbharathkumar/kubernetes-jenkins.git
 > git --version # timeout=10
using GIT_ASKPASS to set credentials 
 > git fetch --tags --progress https://github.com/chbharathkumar/kubernetes-jenkins.git +refs/heads/*:refs/remotes/origin/*
 > git config remote.origin.url https://github.com/chbharathkumar/kubernetes-jenkins.git # timeout=10
 > git config --add remote.origin.fetch +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git config remote.origin.url https://github.com/chbharathkumar/kubernetes-jenkins.git # timeout=10
Fetching upstream changes from https://github.com/chbharathkumar/kubernetes-jenkins.git
using GIT_ASKPASS to set credentials 
 > git fetch --tags --progress https://github.com/chbharathkumar/kubernetes-jenkins.git +refs/heads/*:refs/remotes/origin/*
 > git rev-parse refs/remotes/origin/dev^{commit} # timeout=10
 > git rev-parse refs/remotes/origin/origin/dev^{commit} # timeout=10
Checking out Revision c94f560d15d71e13b46e3b0534942a8cec8aefdd (refs/remotes/origin/dev)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f c94f560d15d71e13b46e3b0534942a8cec8aefdd
Commit message: "Create deploy_svc.yaml"
First time build. Skipping changelog.
[app_tenant_deploy_yaml] $ /bin/sh -xe /tmp/jenkins3857120752528334930.sh
+ sed -i s/reponame/cap/g deploy_svc.yaml
+ sed -i s/namespace:.*/namespace: bharath/g deploy_svc.yaml
+ cat deploy_svc.yaml
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: app_tenant_deploy_cap
  namespace: bharath
spec:
  replicas: 1
  template:
    metadata:
      labels:
        name: cap
    spec:
      containers:
      - name: app_tenant_pod_cap
        image: cap:latest
        ports:
        - containerPort: 8079

---
apiVersion: v1
kind: Service
metadata:
  name: app_tenant_svc_cap
  labels:
    name: app_tenant_cap
  namespace: bharath
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 8079
    nodePort: 30001
  selector:
    name: cap
Finished: SUCCESS
